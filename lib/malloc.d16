.global
_malloc:
    pushlr
    sub r7, 4
    mov r2, r0
    push r4
    mov r4, r2
    test r4, r4
    pop r4
    jmp.ge l4
    mov r0, 0
    jmp l1
l4:
    push r4
    ld r4, [_global_base]
    test r4, r4
    pop r4
    jmp.ne l6
    mov r0, 0
    mov r1, r2
    call _request_space_asm
    mov r3, r0
    st [_global_base], r3
    test r3, r3
    jmp.ne l14
    mov r0, 0
    jmp l1
l6:
    ld r0, [_global_base]
    st [r7+0xfffc], r0 ;sp=-4 
    mov r0, r7
    sub r0, 4
    mov r1, r2
    st [r7+0xfffe], r2 ;sp=-4 
    call _find_free_block_asm
    mov r3, r0
    ld r2, [r7+0xfffe]
    test r3, r3
    jmp.ne l11
    ld r0, [r7+0xfffc]
    mov r1, r2
    call _request_space_asm
    mov r3, r0
    test r3, r3
    jmp.ne l14
    mov r0, 0
    jmp l1
l11:
    push r4
    mov r4, 0
    st [r3+0x4], r4
    mov r4, 30583
    st [r3+0x6], r4
    pop r4
l14:
    mov r0, r3
    add r0, 8
l1:
    add r7, 4
    pop r1
    jmp r1
.global
_free:
    test r0, r0
    jmp.eq l15
    mov r2, r0
    sub r2, 8
    mov r1, 1
    st [r0+0xfffffffc], r1
    mov r1, 21845
    st [r2+0x6], r1
l15:
    ret
.global
_global_base:
    .dw 0
